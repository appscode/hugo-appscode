<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Setup | Swift on GitHub for Kubernetes</title><link>https://appscode.com/products/swift/0.6.0/setup/</link><description>Recent content in Setup | Swift on GitHub for Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://appscode.com/products/swift/0.6.0/setup/index.xml" rel="self" type="application/rss+xml"/><item><title>Install | Swift</title><link>https://appscode.com/products/swift/0.6.0/setup/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://appscode.com/products/swift/0.6.0/setup/install/</guid><description>Installation Guide Swift proxy server can connect to Helm Tiller gRPC server in a number of different ways depending on the --connector flag.
incluster Connector Swift can proxy Tiller server running in the same Kubernetes cluster using incluster connector.
Using YAML Swift can be installed using YAML files includes in the /hack/deploy folder.
# Install without RBAC roles $ kubectl apply -f https://raw.githubusercontent.com/appscode/swift/0.6.0/hack/deploy/without-rbac.yaml # Install with RBAC roles $ kubectl apply -f https://raw.</description></item><item><title>RBAC | Swift</title><link>https://appscode.com/products/swift/0.6.0/setup/rbac/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://appscode.com/products/swift/0.6.0/setup/rbac/</guid><description>Using RBAC with Swift This tutorial will show you how to use Swift in a RBAC enabled cluster.
Before You Begin At first, you need to have a RBAC enabled Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube. To create a RBAC enabled cluster using MiniKube, follow the instructions below:</description></item><item><title>Table of Contents | Setup</title><link>https://appscode.com/products/swift/0.6.0/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://appscode.com/products/swift/0.6.0/setup/</guid><description>Setup Setup contains instructions for installing the Swift and its various components in Kubernetes.
Install Swift. Installation instructions for Swift. RBAC. Shows how to use Swift in a RBAC enabled cluster. Uninstall Swift. Instructions for uninstallating Swift. Developer Guide Overview. Outlines everything you need to know from setting up your dev environment to how to build and test Swift. Release process. Steps for releasing a new version of Swift.</description></item><item><title>Uninstall Swift</title><link>https://appscode.com/products/swift/0.6.0/setup/uninstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://appscode.com/products/swift/0.6.0/setup/uninstall/</guid><description>Uninstall Swift Please follow the steps below to uninstall Swift:
Delete the various objects created for Swift operator.
$ curl -fsSL https://raw.githubusercontent.com/appscode/swift/0.6.0/hack/deploy/uninstall.sh | bash + kubectl delete deployment -l app=swift -n kube-system deployment &amp;quot;swift&amp;quot; deleted + kubectl delete service -l app=swift -n kube-system service &amp;quot;swift&amp;quot; deleted + kubectl delete serviceaccount -l app=swift -n kube-system No resources found + kubectl delete clusterrolebindings -l app=swift -n kube-system No resources found + kubectl delete clusterrole -l app=swift -n kube-system No resources found Now, wait several seconds for Swift to stop running.</description></item></channel></rss>