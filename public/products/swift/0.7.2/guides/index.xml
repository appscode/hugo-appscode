<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Guides | Swift on GitHub for Kubernetes</title><link>https://appscode.com/products/swift/0.7.2/guides/</link><description>Recent content in Guides | Swift on GitHub for Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://appscode.com/products/swift/0.7.2/guides/index.xml" rel="self" type="application/rss+xml"/><item><title>API Reference</title><link>https://appscode.com/products/swift/0.7.2/guides/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://appscode.com/products/swift/0.7.2/guides/api/</guid><description>API Reference Tiller Version GET http://127.0.0.1:9855/tiller/v2/version/json Summarize releases # List releases with status `DEPLOYED` from all namespaces GET http://127.0.0.1:9855/tiller/v2/releases/json # List releases with status `DEPLOYED` from `default` namespace GET http://127.0.0.1:9855/tiller/v2/releases/json?namespace=default # List releases from all namespaces for a list of statuses GET http://127.0.0.1:9855/tiller/v2/releases/json?status_codes=DEPLOYED&amp;amp;&amp;amp;status_codes=DELETED # List releases from `default` namespace for a list of statuses GET http://127.0.0.1:9855/tiller/v2/releases/json?namespace=default&amp;amp;status_codes=DEPLOYED&amp;amp;&amp;amp;status_codes=DELETED # List releases with any status from all namespaces GET http://127.0.0.1:9855/tiller/v2/releases/json?all=true Available query parameters: namespace=&amp;lt;name of namespace&amp;gt;|EMPTY(for all namespaces) sort_by=NAME|LAST_RELEASED all=true|false sort_order=ASC|DESC status_codes=UNKNOWN, DEPLOYED, DELETED, SUPERSEDED, FAILED, DELETING Release status GET http://127.</description></item><item><title>Securing Swift</title><link>https://appscode.com/products/swift/0.7.2/guides/security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://appscode.com/products/swift/0.7.2/guides/security/</guid><description>Securing Swift There are 3 aspects to securing swift connections:
User &amp;lt;-&amp;gt; Swift Server Swift Server &amp;lt;-&amp;gt; Tiller Server Swift Server &amp;lt;-&amp;gt; Chart Repo Serve Swift api over SSL To serve Swift api over SSL connections, you provide a server certificate pair via --cert-file and --key-file flags. If you use a self-signed certificate pair, pass the CA certificate via --cacert-file flag.
--cacert-file string File containing CA certificate --cert-file string File container server TLS certificate --key-file string File containing server TLS private key You can generate certificate pair using tools like onessl, openssl, cfssl.</description></item><item><title>Table of Contents | Guides</title><link>https://appscode.com/products/swift/0.7.2/guides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://appscode.com/products/swift/0.7.2/guides/</guid><description>Guides This section contains guides on how to use Swift.
API Reference: This article documents various aspects of Swift proxy api.
Securing Swift: This article documents various aspects of securing Swift.</description></item></channel></rss>